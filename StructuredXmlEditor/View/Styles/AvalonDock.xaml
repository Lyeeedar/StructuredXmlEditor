<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:StructuredXmlEditor.View"
	xmlns:avalonDock="https://github.com/Dirkster99/AvalonDock"
	xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock">

	<ResourceDictionary.MergedDictionaries>
		<local:SharedResourceDictionary
			Source="Brushes.xaml" />
		<local:SharedResourceDictionary
			Source="GeneralStyles.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<avalonDock:BoolToVisibilityConverter
		x:Key="BoolToVisibilityConverter" />
	<avalonDock:InverseBoolToVisibilityConverter
		x:Key="InverseBoolToVisibilityConverter" />
	<avalonDock:AnchorSideToOrientationConverter
		x:Key="AnchorSideToOrientationConverter" />
	<avalonDock:AnchorSideToAngleConverter
		x:Key="AnchorSideToAngleConverter" />
	<avalonDock:NullToDoNothingConverter
		x:Key="NullToDoNothingConverter" />
	<avalonDock:LayoutItemFromLayoutModelConverter
		x:Key="LayoutItemFromLayoutModelConverter" />
	<avalonDock:ActivateCommandLayoutItemFromLayoutModelConverter
		x:Key="ActivateCommandLayoutItemFromLayoutModelConverter" />

	<Style
		x:Key="ToolBarButtonStyle"
		TargetType="{x:Type ButtonBase}">
		<Setter
			Property="SnapsToDevicePixels"
			Value="false" />
		<Setter
			Property="Cursor"
			Value="Hand" />
		<Setter
			Property="Focusable"
			Value="False" />
		<Setter
			Property="Background"
			Value="Transparent" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="OverridesDefaultStyle"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ButtonBase}">
					<Border
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}"
						Background="{TemplateBinding Background}"
						CornerRadius="{TemplateBinding Border.CornerRadius}">
						<ContentPresenter
							Name="content"
							Margin="2"
							VerticalAlignment="Center"
							HorizontalAlignment="Center" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger
							Property="IsMouseOver"
							Value="True">
							<Setter
								TargetName="content"
								Property="Opacity"
								Value="1.0" />
							<Setter
								Property="Background"
								Value="{StaticResource MouseOverBackgroundBrush}" />
							<Setter
								Property="BorderThickness"
								Value="1" />
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		TargetType="{x:Type TabItem}"
		x:Key="TabStyle">
		<Setter
			Property="Padding"
			Value="4,2,4,2" />
		<Setter
			Property="Margin"
			Value="0" />
		<Setter
			Property="BorderBrush"
			Value="#444" />
		<Setter
			Property="BorderThickness"
			Value="1,0,1,1" />
		<Setter
			Property="Background"
			Value="{StaticResource BackgroundDarkBrush}" />
		<Setter
			Property="UseLayoutRounding"
			Value="True" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type TabItem}">
					<Border
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}"
						Background="{TemplateBinding Background}"
						Padding="{TemplateBinding Padding}"
						Margin="{TemplateBinding Margin}">
						<ContentPresenter
							VerticalAlignment="Center"
							HorizontalAlignment="Center"
							ContentSource="Header"
							RecognizesAccessKey="True" />
					</Border>
					<ControlTemplate.Triggers>

						<Trigger
							Property="IsMouseOver"
							Value="true">
							<Setter
								Property="Background"
								Value="DarkGray" />
							<Setter
								Property="BorderBrush"
								Value="Gray" />
						</Trigger>

						<Trigger
							Property="IsSelected"
							Value="True">
							<Setter
								Property="Panel.ZIndex"
								Value="99999" />
							<Setter
								Property="Margin"
								Value="-1" />
							<Setter
								Property="BorderThickness"
								Value="1" />
							<Setter
								Property="BorderBrush"
								Value="#444" />
							<Setter
								Property="Background"
								Value="#444" />
						</Trigger>

						<DataTrigger
							Binding="{Binding IsActive}"
							Value="True">
							<Setter
								Property="Background"
								Value="{StaticResource SelectionBackgroundBrush}" />
						</DataTrigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="DocumentPaneControlStyle"
		TargetType="{x:Type avalonDock:LayoutDocumentPaneControl}">
		<Setter
			Property="Background"
			Value="{StaticResource WindowBackgroundBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{StaticResource BorderDarkBrush}" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:LayoutDocumentPaneControl}">
					<Grid
						ClipToBounds="true"
						SnapsToDevicePixels="true"
						KeyboardNavigation.TabNavigation="Local">
						<Grid.RowDefinitions>
							<RowDefinition
								Height="Auto" />
							<RowDefinition
								Height="*" />
						</Grid.RowDefinitions>
						<Border
							Background="Transparent"
							Grid.RowSpan="2" />
						<Grid
							Panel.ZIndex="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<avalonDock:DocumentPaneTabPanel
								x:Name="HeaderPanel"
								Grid.Column="0"
								IsItemsHost="true"
								Margin="2,2,2,0"
								Grid.Row="0"
								KeyboardNavigation.TabIndex="1" />
							<avalonDock:DropDownButton
								x:Name="MenuDropDownButton"
								Style="{StaticResource ToolBarButtonStyle}"
								Focusable="False"
								Grid.Column="1">
								<avalonDock:DropDownButton.DropDownContextMenu>
									<avalonDock:ContextMenuEx
										ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
										<avalonDock:ContextMenuEx.ItemContainerStyle>
											<Style
												TargetType="{x:Type avalonDock:MenuItemEx}"
												BasedOn="{StaticResource {x:Type MenuItem}}">
												<Setter
													Property="HeaderTemplate"
													Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}" />
												<Setter
													Property="HeaderTemplateSelector"
													Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}" />
												<Setter
													Property="IconTemplate"
													Value="{Binding Path=Root.Manager.IconContentTemplate}" />
												<Setter
													Property="IconTemplateSelector"
													Value="{Binding Path=Root.Manager.IconContentTemplateSelector}" />
												<Setter
													Property="Command"
													Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}" />
											</Style>
										</avalonDock:ContextMenuEx.ItemContainerStyle>
									</avalonDock:ContextMenuEx>
								</avalonDock:DropDownButton.DropDownContextMenu>
								<Image
									Source="/Resources/AvalonDock/PinDocMenu.png"
									RenderOptions.EdgeMode="Aliased"
									Width="13"
									Height="13" />
							</avalonDock:DropDownButton>
						</Grid>
						<Border
							x:Name="ContentPanel"
							VerticalAlignment="Stretch"
							HorizontalAlignment="Stretch"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Grid.Column="0"
							KeyboardNavigation.DirectionalNavigation="Contained"
							Grid.Row="1"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Cycle">
							<ContentPresenter
								x:Name="PART_SelectedContentHost"
								ContentSource="SelectedContent"
								Margin="{TemplateBinding Padding}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="IsEnabled"
							Value="false">
							<Setter
								Property="Foreground"
								Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
						<DataTrigger
							Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}"
							Value="0">
							<Setter
								Property="Visibility"
								Value="Collapsed"
								TargetName="MenuDropDownButton" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter
			Property="ItemContainerStyle">
			<Setter.Value>
				<Style
					TargetType="{x:Type TabItem}"
					BasedOn="{StaticResource TabStyle}">
					<Setter
						Property="Visibility"
						Value="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
					<Setter
						Property="IsSelected"
						Value="{Binding IsSelected, Mode=TwoWay}" />
					<Setter
						Property="ToolTip"
						Value="{Binding ToolTip}" />
					<Setter
						Property="Background"
						Value="{StaticResource BackgroundNormalBrush}" />
					<Setter
						Property="BorderBrush"
						Value="{StaticResource BorderNormalBrush}" />
				</Style>
			</Setter.Value>
		</Setter>
		<Setter
			Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<avalonDock:LayoutDocumentTabItem
						Model="{Binding}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>

		<Setter
			Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<avalonDock:LayoutDocumentControl
						Model="{Binding}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="AnchorablePaneControlStyle"
		TargetType="{x:Type avalonDock:LayoutAnchorablePaneControl}">
		<Setter
			Property="TabStripPlacement"
			Value="Bottom" />
		<Setter
			Property="Background"
			Value="{StaticResource WindowBackgroundBrush}" />
		<Setter
			Property="BorderBrush"
			Value="{StaticResource BorderDarkBrush}" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:LayoutAnchorablePaneControl}">
					<Grid
						ClipToBounds="true"
						SnapsToDevicePixels="true"
						KeyboardNavigation.TabNavigation="Local">
						<Grid.RowDefinitions>
							<RowDefinition
								Height="*" />
							<RowDefinition
								Height="Auto" />
						</Grid.RowDefinitions>
						<Border
							Background="Transparent"
							Grid.RowSpan="2" />
						<Border
							x:Name="ContentPanel"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}"
							Grid.Column="0"
							KeyboardNavigation.DirectionalNavigation="Contained"
							Grid.Row="0"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Cycle">
							<ContentPresenter
								x:Name="PART_SelectedContentHost"
								ContentSource="SelectedContent"
								Margin="{TemplateBinding Padding}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<avalonDock:AnchorablePaneTabPanel
							x:Name="HeaderPanel"
							Margin="2,0,2,2"
							IsItemsHost="true"
							Grid.Row="1"
							KeyboardNavigation.TabIndex="1"
							Panel.ZIndex="1" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="IsEnabled"
							Value="false">
							<Setter
								Property="Foreground"
								Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Setter
			Property="ItemContainerStyle">
			<Setter.Value>
				<Style
					TargetType="{x:Type TabItem}"
					BasedOn="{StaticResource TabStyle}">
					<Setter
						Property="IsSelected"
						Value="{Binding IsSelected, Mode=TwoWay}" />
					<Setter
						Property="ToolTip"
						Value="{Binding ToolTip}" />
					<Setter
						Property="Background"
						Value="{StaticResource WindowBackgroundBrush}" />
				</Style>
			</Setter.Value>
		</Setter>

		<Setter
			Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<avalonDock:LayoutAnchorableTabItem
						Model="{Binding}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>

		<Setter
			Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<avalonDock:LayoutAnchorableControl
						Model="{Binding}" />
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		TargetType="avalonDock:AnchorablePaneTitle">
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid
							Margin="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Width="*" />
								<ColumnDefinition
									Width="Auto" />
								<ColumnDefinition
									Width="Auto" />
								<ColumnDefinition
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<avalonDock:DropDownControlArea
								DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
								DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
								<ContentPresenter
									Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
									Margin="2,0,0,0"
									ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
									ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
							</avalonDock:DropDownControlArea>

							<avalonDock:DropDownButton
								Style="{StaticResource ToolBarButtonStyle}"
								Focusable="False"
								Grid.Column="1"
								DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
								DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
								ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
								<Image
									Source="/Resources/AvalonDock/PinMenu.png"
									RenderOptions.EdgeMode="Aliased"
									Width="13"
									Height="13" />
							</avalonDock:DropDownButton>

							<Button
								x:Name="PART_AutoHidePin"
								Grid.Column="2"
								Focusable="False"
								Style="{StaticResource ToolBarButtonStyle}"
								Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
								Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}"
								ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}">
								<Image
									Source="/Resources/AvalonDock/PinAutoHide.png"
									RenderOptions.EdgeMode="Aliased"
									Width="13"
									Height="13" />
							</Button>

							<Button
								x:Name="PART_HidePin"
								Grid.Column="3"
								Focusable="False"
								Style="{StaticResource ToolBarButtonStyle}"
								Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
								Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}"
								ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}">
								<Image
									Source="/Resources/AvalonDock/PinClose.png"
									RenderOptions.EdgeMode="Aliased"
									Width="13"
									Height="13" />
							</Button>


						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<DataTrigger
							Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}"
							Value="True">
							<Setter
								Property="LayoutTransform"
								TargetName="PART_AutoHidePin">
								<Setter.Value>
									<RotateTransform
										Angle="90" />
								</Setter.Value>
							</Setter>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate
		x:Key="AnchorSideTemplate"
		TargetType="{x:Type avalonDock:LayoutAnchorSideControl}">
		<ItemsControl
			ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel
						Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
		</ItemsControl>
	</ControlTemplate>

	<ControlTemplate
		x:Key="AnchorGroupTemplate"
		TargetType="{x:Type avalonDock:LayoutAnchorGroupControl}">
		<ItemsControl
			ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
			<ItemsControl.LayoutTransform>
				<RotateTransform
					Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}" />
			</ItemsControl.LayoutTransform>
			<ItemsControl.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel
						Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</ItemsControl.ItemsPanel>
		</ItemsControl>
	</ControlTemplate>

	<ControlTemplate
		x:Key="AnchorTemplate"
		TargetType="{x:Type avalonDock:LayoutAnchorControl}">
		<Border
			BorderThickness="1"
			BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
			Margin="2"
			Padding="2">
			<ContentPresenter
				Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
				ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
				ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
		</Border>
	</ControlTemplate>

	<Style
		x:Key="{x:Type avalonDock:OverlayWindow}"
		TargetType="{x:Type avalonDock:OverlayWindow}">
		<Setter
			Property="Background"
			Value="Transparent" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:OverlayWindow}">
					<Canvas
						x:Name="PART_DropTargetsContainer"
						Opacity="0.9">
						<Path
							x:Name="PART_PreviewBox"
							Fill="#333"
							StrokeThickness="2"
							Stroke="Lime" />
						<Grid
							x:Name="PART_DockingManagerDropTargets">
							<Image
								x:Name="PART_DockingManagerDropTargetLeft"
								VerticalAlignment="Center"
								HorizontalAlignment="Left"
								Source="/Resources/AvalonDock/DockLeft.png"
								Stretch="None" />
							<Image
								x:Name="PART_DockingManagerDropTargetRight"
								VerticalAlignment="Center"
								HorizontalAlignment="Right"
								Source="/Resources/AvalonDock/DockRight.png"
								Stretch="None" />
							<Image
								x:Name="PART_DockingManagerDropTargetBottom"
								VerticalAlignment="Bottom"
								HorizontalAlignment="Center"
								Source="/Resources/AvalonDock/DockBottom.png"
								Stretch="None" />
							<Image
								x:Name="PART_DockingManagerDropTargetTop"
								VerticalAlignment="Top"
								HorizontalAlignment="Center"
								Source="/Resources/AvalonDock/DockTop.png"
								Stretch="None" />
						</Grid>
						<Grid
							x:Name="PART_AnchorablePaneDropTargets">
							<Grid
								Width="88"
								Height="88"
								VerticalAlignment="Center"
								HorizontalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Image
									Grid.ColumnSpan="3"
									Grid.RowSpan="3"
									Source="/Resources/AvalonDock/DockPaneEmpty.png"
									Stretch="Uniform" />
								<Border
									Name="PART_AnchorablePaneDropTargetTop"
									Grid.Column="1"
									Grid.Row="0">
									<Image
										Source="/Resources/AvalonDock/InnerDockPaneTop.png"
										Stretch="None" />
								</Border>
								<Border
									Name="PART_AnchorablePaneDropTargetRight"
									Grid.Column="2"
									Grid.Row="1">
									<Image
										Source="/Resources/AvalonDock/InnerDockPaneRight.png"
										Stretch="None" />
								</Border>
								<Border
									Name="PART_AnchorablePaneDropTargetBottom"
									Grid.Column="1"
									Grid.Row="2">
									<Image
										Source="/Resources/AvalonDock/InnerDockPaneBottom.png"
										Stretch="None" />
								</Border>
								<Border
									Name="PART_AnchorablePaneDropTargetLeft"
									Grid.Column="0"
									Grid.Row="1">
									<Image
										Source="/Resources/AvalonDock/InnerDockPaneLeft.png"
										Stretch="None" />
								</Border>
								<Border
									Name="PART_AnchorablePaneDropTargetInto"
									Grid.Column="1"
									Grid.Row="1">
									<Image
										Source="/Resources/AvalonDock/InnerDockPaneInside.png"
										Stretch="None" />
								</Border>
							</Grid>
						</Grid>
						<Grid
							x:Name="PART_DocumentPaneDropTargets">
							<Grid
								Width="88"
								Height="88"
								VerticalAlignment="Center"
								HorizontalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Image
									Grid.ColumnSpan="3"
									Grid.RowSpan="3"
									Source="/Resources/AvalonDock/DockPaneEmpty.png"
									Stretch="Uniform" />
								<Border
									Name="PART_DocumentPaneDropTargetTop"
									Grid.Column="1"
									Grid.Row="0">
									<Image
										Source="/Resources/AvalonDock/InnerDockDocPaneTop.png"
										Stretch="None" />
								</Border>
								<Border
									Name="PART_DocumentPaneDropTargetRight"
									Grid.Column="2"
									Grid.Row="1">
									<Image
										Source="/Resources/AvalonDock/InnerDockDocPaneRight.png"
										Stretch="None" />
								</Border>
								<Border
									Name="PART_DocumentPaneDropTargetBottom"
									Grid.Column="1"
									Grid.Row="2">
									<Image
										Source="/Resources/AvalonDock/InnerDockDocPaneBottom.png"
										Stretch="None" />
								</Border>
								<Border
									Name="PART_DocumentPaneDropTargetLeft"
									Grid.Column="0"
									Grid.Row="1">
									<Image
										Source="/Resources/AvalonDock/InnerDockDocPaneLeft.png"
										Stretch="None" />
								</Border>
								<Border
									Name="PART_DocumentPaneDropTargetInto"
									Grid.Column="1"
									Grid.Row="1">
									<Image
										Source="/Resources/AvalonDock/InnerDockPaneInside.png"
										Stretch="None" />
								</Border>
							</Grid>
						</Grid>
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate
		x:Key="DocumentHeaderTemplate">
		<DockPanel>
			<Image
				DockPanel.Dock="Left"
				Visibility="{Binding Content.Icon, Converter={local:NullOrZeroConverter}, ConverterParameter=Not}"
				Source="{Binding Content.Icon, Converter={local:NullImageConverter}}"
				Width="16"
				Height="16" />
			<TextBlock
				VerticalAlignment="Center"
				Text="{Binding Title}"
				TextTrimming="CharacterEllipsis"
				Foreground="{Binding Content.FontColour}" />
		</DockPanel>
		
	</DataTemplate>

	<DataTemplate
		x:Key="AnchorableHeaderTemplate">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition
					Width="Auto" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>
			<Image
				x:Name="icon"
				Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}"
				Stretch="Uniform"
				Width="16" />
			<TextBlock
				x:Name="title"
				Margin="4,0,0,0"
				Text="{Binding Title}"
				TextTrimming="CharacterEllipsis"
				Grid.Column="1"
				Foreground="White" />
		</Grid>
		<DataTemplate.Triggers>
			<DataTrigger
				Binding="{Binding IconSource}"
				Value="{x:Null}">
				<Setter
					Property="Margin"
					Value="0"
					TargetName="title" />
			</DataTrigger>
		</DataTemplate.Triggers>
	</DataTemplate>

	<DataTemplate
		x:Key="DocumentTitleTemplate">
		<TextBlock
			Text="{Binding Title}"
			TextTrimming="CharacterEllipsis"
			Foreground="White" />
	</DataTemplate>

	<DataTemplate
		x:Key="AnchorableTitleTemplate">
		<TextBlock
			Text="{Binding Title}"
			TextTrimming="CharacterEllipsis"
			Foreground="White" />
	</DataTemplate>

	<DataTemplate
		x:Key="IconContentTemplate">
		<Image
			Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}"
			Stretch="Uniform"
			Width="16" />
	</DataTemplate>

	<ContextMenu
		x:Key="AnchorableContextMenu">
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Anchorable_Float}"
			Command="{Binding Path=FloatCommand}" />
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Anchorable_Dock}"
			Command="{Binding Path=DockCommand}" />
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Anchorable_DockAsDocument}"
			Command="{Binding Path=DockAsDocumentCommand}" />
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Anchorable_AutoHide}"
			Command="{Binding Path=AutoHideCommand}" />
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Anchorable_Hide}"
			Command="{Binding Path=HideCommand}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
	</ContextMenu>

	<ContextMenu
		x:Key="DocumentContextMenu">
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Document_Close}"
			Command="{Binding Path=CloseCommand}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Document_CloseAllButThis}"
			Command="{Binding Path=CloseAllButThisCommand}" />
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Document_Float}"
			Command="{Binding Path=FloatCommand}" />
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Document_DockAsDocument}"
			Command="{Binding Path=DockAsDocumentCommand}" />
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Document_NewHorizontalTabGroup}"
			Command="{Binding Path=NewHorizontalTabGroupCommand}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Document_NewVerticalTabGroup}"
			Command="{Binding Path=NewVerticalTabGroupCommand}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Document_MoveToNextTabGroup}"
			Command="{Binding Path=MoveToNextTabGroupCommand}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
		<MenuItem
			Header="{x:Static avalonDockProperties:Resources.Document_MoveToPreviousTabGroup}"
			Command="{Binding Path=MoveToPreviousTabGroupCommand}"
			Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
	</ContextMenu>

	<Style
		x:Key="{x:Type avalonDock:DockingManager}"
		TargetType="{x:Type avalonDock:DockingManager}">
		<Setter
			Property="DocumentPaneControlStyle"
			Value="{StaticResource DocumentPaneControlStyle}" />
		<Setter
			Property="AnchorablePaneControlStyle"
			Value="{StaticResource AnchorablePaneControlStyle}" />
		<Setter
			Property="AnchorSideTemplate"
			Value="{StaticResource AnchorSideTemplate}" />
		<Setter
			Property="AnchorGroupTemplate"
			Value="{StaticResource AnchorGroupTemplate}" />
		<Setter
			Property="AnchorTemplate"
			Value="{StaticResource AnchorTemplate}" />
		<Setter
			Property="DocumentHeaderTemplate"
			Value="{StaticResource DocumentHeaderTemplate}" />
		<Setter
			Property="AnchorableHeaderTemplate"
			Value="{StaticResource AnchorableHeaderTemplate}" />
		<Setter
			Property="DocumentTitleTemplate"
			Value="{StaticResource DocumentTitleTemplate}" />
		<Setter
			Property="AnchorableTitleTemplate"
			Value="{StaticResource AnchorableTitleTemplate}" />
		<Setter
			Property="AnchorableContextMenu"
			Value="{StaticResource AnchorableContextMenu}" />
		<Setter
			Property="DocumentContextMenu"
			Value="{StaticResource DocumentContextMenu}" />
		<Setter
			Property="DocumentPaneMenuItemHeaderTemplate"
			Value="{StaticResource DocumentHeaderTemplate}" />
		<Setter
			Property="IconContentTemplate"
			Value="{StaticResource IconContentTemplate}" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:DockingManager}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<Grid
							FlowDirection="LeftToRight">
							<Grid.RowDefinitions>
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Height="*" />
								<RowDefinition
									Height="Auto" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition
									Width="Auto" />
								<ColumnDefinition
									Width="*" />
								<ColumnDefinition
									Width="Auto" />
							</Grid.ColumnDefinitions>
							<ContentPresenter
								Content="{TemplateBinding LayoutRootPanel}"
								Grid.Column="1"
								Grid.Row="1" />
							<ContentPresenter
								Content="{TemplateBinding RightSidePanel}"
								Grid.Column="2"
								Grid.Row="1" />
							<ContentPresenter
								Content="{TemplateBinding LeftSidePanel}"
								Grid.Column="0"
								Grid.Row="1" />
							<ContentPresenter
								Content="{TemplateBinding TopSidePanel}"
								Grid.Column="1"
								Grid.Row="0" />
							<ContentPresenter
								Content="{TemplateBinding BottomSidePanel}"
								Grid.Column="1"
								Grid.Row="2" />
							<ContentPresenter
								x:Name="PART_AutoHideArea"
								Content="{TemplateBinding AutoHideWindow}"
								VerticalAlignment="{TemplateBinding VerticalAlignment}"
								HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
								Grid.Column="1"
								Grid.Row="1" />
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="{x:Type avalonDock:LayoutGridResizerControl}"
		TargetType="{x:Type avalonDock:LayoutGridResizerControl}">
		<Setter
			Property="Background"
			Value="Transparent" />
		<Setter
			Property="MinHeight"
			Value="6" />
		<Setter
			Property="MinWidth"
			Value="6" />
		<Setter
			Property="BorderThickness"
			Value="0" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:LayoutGridResizerControl}">
					<Border
						x:Name="Root"
						Width="{TemplateBinding Width}"
						Height="{TemplateBinding Height}"
						MinWidth="{TemplateBinding MinWidth}"
						MinHeight="{TemplateBinding MinHeight}"
						Background="{TemplateBinding Background}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true"
						IsHitTestVisible="{TemplateBinding IsEnabled}">
						<Grid
							Margin="0"
							VerticalAlignment="Center"
							HorizontalAlignment="Center">
							<Rectangle
								Height="2"
								Width="2"
								StrokeThickness="0"
								Fill="{StaticResource BorderNormalBrush}" />
						</Grid>
					</Border>

					<ControlTemplate.Triggers>

						<Trigger
							Property="IsMouseOver"
							Value="true">
							<Setter
								TargetName="Root"
								Property="Background"
								Value="{StaticResource MouseOverBackgroundBrush}" />
						</Trigger>

						<Trigger
							Property="IsDragging"
							Value="true">
							<Setter
								TargetName="Root"
								Property="Background"
								Value="{StaticResource SelectionBackgroundBrush}" />
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		TargetType="{x:Type avalonDock:LayoutDocumentControl}">
		<Setter
			Property="Background"
			Value="{StaticResource WindowBackgroundBrush}" />
		<Setter
			Property="BorderBrush"
			Value="Transparent" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:LayoutDocumentControl}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter
							Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		TargetType="{x:Type avalonDock:LayoutDocumentTabItem}">
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:LayoutDocumentTabItem}">
					<avalonDock:DropDownControlArea
						DropDownContextMenu="{Binding Root.Manager.DocumentContextMenu}"
						DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition
										Width="*" />
									<ColumnDefinition
										Width="Auto" />
								</Grid.ColumnDefinitions>
								<Border
									Grid.ColumnSpan="2"
									Background="Transparent" />
								<ContentPresenter
									Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
									ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
									ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
								<Button
									x:Name="DocumentCloseButton"
									Style="{StaticResource ToolBarButtonStyle}"
									Grid.Column="1"
									Margin="5,0,0,0"
									Visibility="Hidden"
									Command="{Binding Path=LayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
									ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}">
									<Image
										Source="/Resources/AvalonDock/PinClose.png"
										RenderOptions.EdgeMode="Aliased"
										Width="13"
										Height="13" />
								</Button>
							</Grid>
						</Border>
					</avalonDock:DropDownControlArea>
					<ControlTemplate.Triggers>
						<DataTrigger
							Binding="{Binding Path=IsSelected}"
							Value="true">
							<Setter
								Property="Visibility"
								Value="Visible"
								TargetName="DocumentCloseButton" />
						</DataTrigger>
						<Trigger
							Property="IsMouseOver"
							Value="True">
							<Setter
								Property="Visibility"
								Value="Visible"
								TargetName="DocumentCloseButton" />
						</Trigger>
						<DataTrigger
							Binding="{Binding Path=CanClose}"
							Value="false">
							<Setter
								Property="Visibility"
								Value="Collapsed"
								TargetName="DocumentCloseButton" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		TargetType="{x:Type avalonDock:LayoutAnchorableTabItem}">
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:LayoutAnchorableTabItem}">
					<avalonDock:DropDownControlArea
						DropDownContextMenu="{Binding Root.Manager.AnchorableContextMenu}"
						DropDownContextMenuDataContext="{Binding LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
						<Border
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
							<Grid>
								<ContentPresenter
									Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
									ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
									ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}" />
								<avalonDock:DropDownControlArea
									Grid.Column="0"
									DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
									DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}" />
							</Grid>
						</Border>
					</avalonDock:DropDownControlArea>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		TargetType="{x:Type avalonDock:LayoutAnchorableControl}">
		<Setter
			Property="Background"
			Value="{StaticResource WindowBackgroundBrush}" />
		<Setter
			Property="BorderBrush"
			Value="Transparent" />
		<Setter
			Property="BorderThickness"
			Value="1" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:LayoutAnchorableControl}">
					<Border
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						KeyboardNavigation.TabNavigation="Cycle">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition
									Height="Auto" />
								<RowDefinition
									Height="*" />
							</Grid.RowDefinitions>
							<Border
								x:Name="Header">
								<avalonDock:AnchorablePaneTitle
									Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
									Margin="-5,-5,-5,5"
									Background="#555"
									x:Name="title" />
							</Border>

							<ContentPresenter
								Grid.Row="1"
								FlowDirection="{TemplateBinding FlowDirection}"
								Content="{Binding LayoutItem.View, RelativeSource={RelativeSource TemplatedParent}}" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<DataTrigger
							Binding="{Binding IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}"
							Value="True">
							<Setter
								Property="Background"
								Value="{StaticResource SelectionBackgroundBrush}"
								TargetName="title" />
						</DataTrigger>
						<DataTrigger
							Binding="{Binding IsActive}"
							Value="True">
							<Setter
								Property="Background"
								Value="{StaticResource SelectionBackgroundBrush}"
								TargetName="title" />
						</DataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition
									Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsFloating}"
									Value="True" />
								<Condition
									Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}"
									Value="True" />
							</MultiDataTrigger.Conditions>
							<Setter
								Property="Visibility"
								Value="Collapsed"
								TargetName="Header" />
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="{x:Type avalonDock:LayoutDocumentFloatingWindowControl}"
		TargetType="{x:Type avalonDock:LayoutDocumentFloatingWindowControl}">
		<Setter
			Property="Background"
			Value="{StaticResource WindowBackgroundBrush}" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:LayoutDocumentFloatingWindowControl}">
					<Grid>
						<Border
							x:Name="WindowBorder"
							BorderThickness="3"
							Background="{TemplateBinding Background}"
							BorderBrush="{StaticResource BorderDarkBrush}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition
										Height="20" />
									<RowDefinition
										Height="*" />
								</Grid.RowDefinitions>
								<Grid
									Background="#555"
									x:Name="title">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="*" />
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="Auto" />
									</Grid.ColumnDefinitions>

									<Border>
										<ContentPresenter
											Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}"
											ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
											ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
											Margin="5,0,0,0" />

									</Border>

									<Button
										Focusable="False"
										Style="{StaticResource ToolBarButtonStyle}"
										Command="{Binding Path=RootDocumentLayoutItem.CloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
										ToolTip="{x:Static avalonDockProperties:Resources.Document_Close}"
										Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
										Grid.Column="3">
										<Image
											Source="/Resources/AvalonDock/PinClose.png"
											RenderOptions.EdgeMode="Aliased"
											Width="13"
											Height="13" />
									</Button>
								</Grid>
								<ContentPresenter
									Content="{TemplateBinding Content}"
									Grid.Row="1" />
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="WindowState"
							Value="Maximized">
							<Setter
								Property="Padding"
								Value="3"
								TargetName="WindowBorder" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="{x:Type avalonDock:LayoutAnchorableFloatingWindowControl}"
		TargetType="{x:Type avalonDock:LayoutAnchorableFloatingWindowControl}">
		<Setter
			Property="Background"
			Value="{StaticResource WindowBackgroundBrush}" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:LayoutAnchorableFloatingWindowControl}">
					<Grid>
						<Border
							x:Name="WindowBorder"
							BorderThickness="3"
							Background="{TemplateBinding Background}"
							BorderBrush="{StaticResource BorderDarkBrush}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition
										Height="20" />
									<RowDefinition
										Height="*" />
								</Grid.RowDefinitions>
								<Grid
									Name="title"
									Background="#555">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="*" />
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition
											Width="Auto" />
									</Grid.ColumnDefinitions>

									<Border
										Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
										<avalonDock:DropDownControlArea
											DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
											DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
											<ContentPresenter
												Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}"
												ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
												ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
												Margin="5,0,0,0" />
										</avalonDock:DropDownControlArea>
									</Border>


									<avalonDock:DropDownButton
										x:Name="SinglePaneContextMenu"
										Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
										Style="{StaticResource ToolBarButtonStyle}"
										Focusable="False"
										Grid.Column="1"
										DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
										DropDownContextMenuDataContext="{Binding Path=SingleContentLayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
										ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
										<Image
											Source="/Resources/AvalonDock/PinMenu.png"
											RenderOptions.EdgeMode="Aliased"
											Width="13"
											Height="13" />
									</avalonDock:DropDownButton>

									<Button
										Focusable="False"
										Style="{StaticResource ToolBarButtonStyle}"
										Command="{Binding HideWindowCommand, RelativeSource={RelativeSource TemplatedParent}}"
										ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}"
										Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
										Grid.Column="3">
										<Image
											Source="/Resources/AvalonDock/PinClose.png"
											RenderOptions.EdgeMode="Aliased"
											Width="13"
											Height="13" />
									</Button>
								</Grid>
								<ContentPresenter
									Content="{TemplateBinding Content}"
									Grid.Row="1" />
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger
							Property="WindowState"
							Value="Maximized">
							<Setter
								Property="Padding"
								Value="3"
								TargetName="WindowBorder" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="{x:Type avalonDock:LayoutAutoHideWindowControl}"
		TargetType="{x:Type avalonDock:LayoutAutoHideWindowControl}">
		<Setter
			Property="Background"
			Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
	</Style>

	<Style
		x:Key="{x:Type avalonDock:NavigatorWindow}"
		TargetType="{x:Type avalonDock:NavigatorWindow}">
		<Setter
			Property="Background"
			Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
		<Setter
			Property="SizeToContent"
			Value="WidthAndHeight" />
		<Setter
			Property="ResizeMode"
			Value="NoResize" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type avalonDock:NavigatorWindow}">
					<Grid>
						<Border
							x:Name="WindowBorder"
							BorderThickness="3"
							Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
							BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}">
							<Grid
								Margin="5">
								<Grid.RowDefinitions>
									<RowDefinition
										Height="54" />
									<RowDefinition
										Height="*" />
									<RowDefinition
										Height="42" />
								</Grid.RowDefinitions>

								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition />
									</Grid.RowDefinitions>
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition
												Width="Auto" />
											<ColumnDefinition />
										</Grid.ColumnDefinitions>
										<Image
											Source="{Binding SelectedDocument.LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
											Stretch="None"
											Width="16" />
										<TextBlock
											Text="{Binding SelectedDocument.LayoutElement.Title}"
											TextTrimming="CharacterEllipsis"
											Grid.Column="1"
											VerticalAlignment="Center"
											FontWeight="Bold"
											Margin="4,0,0,0" />
									</Grid>
									<TextBlock
										Text="{Binding SelectedDocument.LayoutElement.Description}"
										TextTrimming="CharacterEllipsis"
										VerticalAlignment="Center" />
								</Grid>

								<Grid
									Grid.Row="1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition
											Width="Auto" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<Grid
										Margin="5">
										<Grid.RowDefinitions>
											<RowDefinition
												Height="Auto" />
											<RowDefinition />
										</Grid.RowDefinitions>
										<TextBlock
											Text="Active Tool Windows"
											FontWeight="Bold"
											Margin="0,3,0,4" />
										<ListBox
											Grid.Row="1"
											ItemsSource="{Binding Anchorables}"
											SelectedItem="{Binding SelectedAnchorable, Mode=TwoWay}"
											Background="Transparent"
											BorderThickness="0"
											MaxHeight="400"
											FocusVisualStyle="{x:Null}">
											<ListBox.ItemContainerStyle>
												<Style
													TargetType="ListBoxItem">
													<Setter
														Property="Cursor"
														Value="Hand" />
													<Style.Triggers>
														<Trigger
															Property="IsMouseOver"
															Value="True">
															<Setter
																Property="Background"
																Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
															<Setter
																Property="TextElement.Foreground"
																Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
														</Trigger>
													</Style.Triggers>
												</Style>
											</ListBox.ItemContainerStyle>
											<ListBox.ItemTemplate>
												<DataTemplate>
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition
																Width="Auto" />
															<ColumnDefinition />
														</Grid.ColumnDefinitions>
														<Image
															Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
															Stretch="None"
															Width="16" />
														<TextBlock
															Text="{Binding LayoutElement.Title}"
															TextTrimming="CharacterEllipsis"
															Grid.Column="1"
															Margin="4,2,0,2" />
													</Grid>
												</DataTemplate>
											</ListBox.ItemTemplate>
										</ListBox>
									</Grid>
									<Grid
										Grid.Column="1"
										Margin="5">
										<Grid.RowDefinitions>
											<RowDefinition
												Height="Auto" />
											<RowDefinition />
										</Grid.RowDefinitions>
										<TextBlock
											Text="Active Files"
											FontWeight="Bold"
											Margin="0,3,0,4" />
										<ListBox
											Grid.Row="1"
											ItemsSource="{Binding Documents}"
											SelectedItem="{Binding SelectedDocument, Mode=TwoWay}"
											Background="Transparent"
											BorderThickness="0"
											MaxHeight="400"
											FocusVisualStyle="{x:Null}">
											<ListBox.ItemContainerStyle>
												<Style
													TargetType="ListBoxItem">
													<Setter
														Property="Cursor"
														Value="Hand" />
													<Style.Triggers>
														<Trigger
															Property="IsMouseOver"
															Value="True">
															<Setter
																Property="Background"
																Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
															<Setter
																Property="TextElement.Foreground"
																Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
														</Trigger>
													</Style.Triggers>
												</Style>
											</ListBox.ItemContainerStyle>
											<ListBox.ItemTemplate>
												<DataTemplate>
													<Grid>
														<Grid.ColumnDefinitions>
															<ColumnDefinition
																Width="Auto" />
															<ColumnDefinition />
														</Grid.ColumnDefinitions>
														<Image
															Source="{Binding LayoutElement.IconSource, Converter={StaticResource NullToDoNothingConverter}}"
															Stretch="None"
															Width="16" />
														<TextBlock
															Text="{Binding LayoutElement.Title}"
															TextTrimming="CharacterEllipsis"
															Grid.Column="1"
															Margin="4,2,0,2" />
													</Grid>
												</DataTemplate>
											</ListBox.ItemTemplate>
											<ListBox.ItemsPanel>
												<ItemsPanelTemplate>
													<WrapPanel
														Orientation="Vertical" />
												</ItemsPanelTemplate>
											</ListBox.ItemsPanel>
										</ListBox>
									</Grid>
								</Grid>

								<Grid
									Grid.Row="2">
									<TextBlock
										Text="{Binding SelectedDocument.LayoutElement.ToolTip}"
										VerticalAlignment="Center" />
								</Grid>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

	</Style>

</ResourceDictionary>
